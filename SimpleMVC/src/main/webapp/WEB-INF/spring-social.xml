<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:twitter="http://www.springframework.org/schema/social/twitter"
       xmlns:social="http://www.springframework.org/schema/social"
       xmlns:facebook="http://www.springframework.org/schema/social/facebook"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/social http://www.springframework.org/schema/social/spring-social.xsd
       http://www.springframework.org/schema/social/twitter http://www.springframework.org/schema/social/spring-social-twitter.xsd
       http://www.springframework.org/schema/social/facebook http://www.springframework.org/schema/social/spring-social-facebook.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
      
      <!-- Ensures that configuration properties are read from a property file -->
    <context:property-placeholder location="WEB-INF/application.properties"/>

	<facebook:config app-id="${facebook.clientId}" app-secret="${facebook.clientSecret}"/>
    <twitter:config app-id="${twitter.consumerKey}" app-secret="${twitter.consumerSecret}"/>
    <!--
        Configures FB and Twitter support. 
    
    <bean id="connectionFactoryLocator" 
      class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
    <property name="connectionFactories">
        <list>
            <bean class="org.springframework.social.twitter.connect.TwitterConnectionFactory">
                <constructor-arg value="${twitter.consumerKey}" />
                <constructor-arg value="${twitter.consumerSecret}" />				
            </bean>
            <bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
                <constructor-arg value="${facebook.clientId}" />
                <constructor-arg value="${facebook.clientSecret}" />				
            </bean>
        </list>
    </property>
	</bean>
	--> 
	 
    <!--
        Configures the connection repository. This application uses JDBC
        connection repository which saves connection details to database.
        This repository uses the data source bean for obtaining database
        connection.
    -->
    <bean id="usersConnectionRepository" 
	      class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
	    <constructor-arg ref="dataSource" />
	    <constructor-arg ref="connectionFactoryLocator" />
	    <constructor-arg ref="textEncryptor" />
	</bean>
	
	<bean id="connectionRepository" factory-method="createConnectionRepository" 
	      factory-bean="usersConnectionRepository" scope="request">
	    <constructor-arg value="#{request.getParameter('userId')}" />
	    <aop:scoped-proxy proxy-target-class="false" />
	</bean>

    <!--
        This bean manages the connection flow between the account provider and
        the example application.
    -->
    <bean id="connectController" class="org.springframework.social.connect.web.ConnectController">
    	<constructor-arg ref="connectionFactoryLocator"/>
    	<constructor-arg ref="connectionRepository"/>
    </bean>
          
    <bean id="signInAdapter" class="com.yqfan.simplemvc.social.SocialSignInAdapter" />
     
    <bean id="providerSignInController" class="org.springframework.social.connect.web.ProviderSignInController" >
    	<constructor-arg ref="connectionFactoryLocator"/>
  		<constructor-arg ref="usersConnectionRepository"/>
  		<constructor-arg ref="signInAdapter"/>
  	</bean> 
          
    <bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource"/>
      
    <bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="noOpText" />   
</beans>